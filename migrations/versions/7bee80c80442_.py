"""empty message

Revision ID: 7bee80c80442
Revises: 8105c2996b93
Create Date: 2020-01-04 18:41:47.521267

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7bee80c80442'
down_revision = '8105c2996b93'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('reference_published')
    op.drop_table('author_reference_relationship')
    op.add_column('reference', sa.Column('day', sa.Integer(), nullable=True))
    op.add_column('reference', sa.Column('era_fk', sa.Integer(), nullable=True))
    op.add_column('reference', sa.Column('month_fk', sa.Integer(), nullable=True))
    op.add_column('reference', sa.Column('year', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'reference', 'era', ['era_fk'], ['id'])
    op.create_foreign_key(None, 'reference', 'month', ['month_fk'], ['id'])
    op.add_column('reference_author', sa.Column('author_fk', sa.Integer(), nullable=True))
    op.add_column('reference_author', sa.Column('reference_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'reference_author', 'author', ['author_fk'], ['id'])
    op.create_foreign_key(None, 'reference_author', 'reference', ['reference_fk'], ['id'])
    op.drop_column('reference_author', 'middle_name')
    op.drop_column('reference_author', 'last_name')
    op.drop_column('reference_author', 'first_name')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reference_author', sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('reference_author', sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('reference_author', sa.Column('middle_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'reference_author', type_='foreignkey')
    op.drop_constraint(None, 'reference_author', type_='foreignkey')
    op.drop_column('reference_author', 'reference_fk')
    op.drop_column('reference_author', 'author_fk')
    op.drop_constraint(None, 'reference', type_='foreignkey')
    op.drop_constraint(None, 'reference', type_='foreignkey')
    op.drop_column('reference', 'year')
    op.drop_column('reference', 'month_fk')
    op.drop_column('reference', 'era_fk')
    op.drop_column('reference', 'day')
    op.create_table('author_reference_relationship',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('reference_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_fk'], ['reference_author.id'], name='author_reference_relationship_author_fk_fkey'),
    sa.ForeignKeyConstraint(['reference_fk'], ['reference.id'], name='author_reference_relationship_reference_fk_fkey'),
    sa.PrimaryKeyConstraint('id', name='author_reference_relationship_pkey')
    )
    op.create_table('reference_published',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('day', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('month_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('era_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reference_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['era_fk'], ['era.id'], name='reference_published_era_fk_fkey'),
    sa.ForeignKeyConstraint(['month_fk'], ['month.id'], name='reference_published_month_fk_fkey'),
    sa.ForeignKeyConstraint(['reference_fk'], ['reference.id'], name='reference_published_reference_fk_fkey'),
    sa.PrimaryKeyConstraint('id', name='reference_published_pkey')
    )
    op.drop_table('author')
    # ### end Alembic commands ###
